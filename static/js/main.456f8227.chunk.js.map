{"version":3,"sources":["types/StatusState.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["StatusState","TodoList","todos","onTodoSelected","selectedTodoId","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","statusState","setStatusState","query","setQuery","value","onChange","event","target","All","Active","Completed","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","isLoading","setIsLoading","useEffect","userId","finally","href","email","name","App","setTodos","selectedTodo","setSelectedTodo","filteredTodos","useMemo","lowerTitleQuery","toLowerCase","filter","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.456f8227.chunk.js","sourcesContent":["export enum StatusState {\n  All = 'all',\n  Completed = 'completed',\n  Active = 'active',\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodoId?: number,\n  onTodoSelected: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = (\n  {\n    todos,\n    onTodoSelected,\n    selectedTodoId,\n  },\n) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          key={todo.id}\n          data-cy=\"todo\"\n          className={classNames({\n            'has-background-info-light': todo.id === selectedTodoId,\n          })}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={classNames({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n\n              })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => {\n                onTodoSelected(todo);\n              }}\n            >\n              <span className=\"icon\">\n                <i className={classNames('far', {\n                  'fa-eye': todo.id !== selectedTodoId,\n                  'fa-eye-slash': todo.id === selectedTodoId,\n                })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { StatusState } from '../../types/StatusState';\n\ntype Props = {\n  statusState: StatusState;\n  setStatusState: (status: StatusState) => void;\n  query: string;\n  setQuery: (query: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  statusState,\n  setStatusState,\n  query,\n  setQuery,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={statusState}\n          onChange={(event) => {\n            setStatusState(event.target.value as StatusState);\n          }}\n        >\n          <option value={StatusState.All}>All</option>\n          <option value={StatusState.Active}>Active</option>\n          <option value={StatusState.Completed}>Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={((event) => {\n          setQuery(event.target.value);\n        })}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n      {query && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => {\n              setQuery('');\n            }}\n          />\n        </span>\n      )}\n\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo: Todo,\n  onTodoSelected: (todo: null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onTodoSelected }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getUser(todo.userId)\n      .then(setUser)\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                onTodoSelected(null);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n              {' by '}\n              {user && (\n                <a href={`mailto:${user?.email}`}>\n                  {user?.name}\n                </a>\n              )}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { StatusState } from './types/StatusState';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [statusState, setStatusState] = useState(StatusState.All);\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos()\n      .then(setTodos)\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  const filteredTodos = useMemo(() => {\n    const lowerTitleQuery = query.toLowerCase();\n\n    return todos.filter(todo => {\n      switch (statusState) {\n        case StatusState.Active:\n          return !todo.completed;\n        case StatusState.Completed:\n          return todo.completed;\n        default:\n          return true;\n      }\n    }).filter(todo => (\n      todo.title.toLowerCase().includes(lowerTitleQuery)\n    ));\n  }, [statusState, query, todos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                statusState={statusState}\n                setStatusState={setStatusState}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading\n                ? <Loader />\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                    selectedTodoId={selectedTodo?.id}\n                    onTodoSelected={setSelectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onTodoSelected={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}